{"version":3,"file":"static/js/588.6717bd12.chunk.js","mappings":"sPAsDA,EAhDwB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MAmCjB,OAlCAC,EAAAA,EAAAA,kBAAgB,WACd,GAAKH,EAAL,CACAI,EAAAA,GAAAA,IAAS,gBAAiB,CAAEC,SAAU,IAAKC,QAAS,IAEpD,IAAMC,EAAYH,EAAAA,GAAAA,MAAAA,QAAmB,uBACrCA,EAAAA,GAAAA,KAAUG,EAAW,CACnBF,UAAW,IACXC,QAAS,EACTE,MAAO,KASTD,EAAUE,SAAQ,SAAAC,GAChB,IAAMC,EAAcD,EAAKE,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAE1DF,EAAKG,iBAAiB,cAAc,kBAClCT,EAAAA,GAAAA,GAAQO,EAAa,CACnBN,SAAU,EACVC,QAAS,GAHuB,IAMpCI,EAAKG,iBAAiB,cAAc,kBAClCT,EAAAA,GAAAA,GAAQO,EAAa,CACnBN,SAAU,IACVC,QAAS,GAHuB,GAMrC,GA/BkB,CAgCpB,KAEC,iBAAKQ,UAAU,yBAAf,WACE,eAAIA,UAAU,sBAAd,oCACA,gBAAKA,UAAU,qBAAf,SACGd,EAAOe,KAAI,SAAAC,GAAK,OACf,SAACC,EAAA,EAAD,CAAMD,MAAOA,EAAOf,SAAU,CAAEiB,KAAMjB,IAAiBe,EAAMG,GAD9C,QAMxB,EChDKC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA6BZ,EA1BiB,WACf,OAA4CC,EAAAA,EAAAA,YAA5C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,EAAUL,IACVS,EAAAA,EAAAA,KACGC,MAAK,SAAAC,GACJC,QAAQC,IAAI,OAAQF,GACpBR,EAAkBQ,EAAKA,KAAKG,SAC5BT,EAAUL,EACX,IACAe,OAAM,SAAAT,GACLD,EAAUL,GACVO,EAASD,EACV,GACJ,GAAE,IAECF,IAAWJ,GAAoB,oDAC/BI,IAAWJ,GACN,SAAC,EAAD,CAAiBpB,OAAQsB,IAC9BE,IAAWJ,GACN,6CAAqBM,EAAMU,gBADpC,CAED,C,oFCjCYnB,EAAO,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACff,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAKY,UAAU,qBAAf,UACE,UAAC,EAAAuB,KAAD,CACEvB,UAAU,kBACVwB,GAAE,wBAAmBtB,EAAMG,IAC3BoB,MAAO,CAAErB,KAAMjB,GAHjB,WAKE,iBAAKa,UAAU,cAAf,WACE,gBACEA,UAAU,SACV0B,IACwB,OAAtBxB,EAAMyB,YAAN,yCACsCzB,EAAMyB,aACxC,+CAENC,IAAI,MAEN,iBAAK5B,UAAU,eAAf,WACE,eAAIA,UAAU,WAAd,4BAA6C,KAC7C,iBAAMA,UAAU,WAChB,eAAGA,UAAU,oBAAb,UAAkCE,EAAM2B,SAAxC,OAAuD,UAEpD,KACP,eAAG7B,UAAU,mBAAb,UACGE,EAAM4B,MACiB,KAAvB5B,EAAM6B,cAAuB,KAAO7B,EAAM6B,aAAaC,UAAU,EAAG,UAxBlC9B,EAAMG,GA6BlD,C","sources":["components/pages/pageComponents/TrendingGallery.jsx","components/pages/Home.jsx","components/pages/pageComponents/Card.jsx"],"sourcesContent":["import gsap from 'gsap';\nimport { useLayoutEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Card } from './Card';\n\nconst TrendingGallery = ({ movies }) => {\n  const location = useLocation();\n  useLayoutEffect(() => {\n    if (!movies) return;\n    gsap.set('.poster-descr', { yPercent: 100, opacity: 0 });\n\n    const movieCard = gsap.utils.toArray('.movie-gallery-item');\n    gsap.from(movieCard, {\n      yPercent: -100,\n      opacity: 0,\n      scale: 0.7,\n      // stagger: {\n      //   amount: 2,\n      //   grid: 'auto',\n      //   ease: 'power2.inOut',\n      // },\n\n    });\n\n    movieCard.forEach(card => {\n      const description = card.children[0].children[0].children[1];\n\n      card.addEventListener('mouseenter', () =>\n        gsap.to(description, {\n          yPercent: 0,\n          opacity: 1,\n        })\n      );\n      card.addEventListener('mouseleave', () =>\n        gsap.to(description, {\n          yPercent: 100,\n          opacity: 0,\n        })\n      );\n    });\n  });\n  return (\n    <div className=\"container home-section\">\n      <h1 className=\"home-section-header\">Today trending movies</h1>\n      <div className=\"movie-gallery-list\">\n        {movies.map(movie => (\n          <Card movie={movie} location={{ from: location }} key={movie.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TrendingGallery;\n","import getTrendingMovies from 'components/utils/getTrendingMovies';\nimport { useEffect, useState } from 'react';\nimport TrendingGallery from './pageComponents/TrendingGallery';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    getTrendingMovies()\n      .then(data => {\n        console.log('data', data);\n        setTrendingMovies(data.data.results);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setStatus(STATUS.REJECTED);\n        setError(error);\n      });\n  }, []);\n\n  if (status === STATUS.IDLE) return <h1>LOADING TRENDING MOVIES</h1>;\n  if (status === STATUS.RESOLVED)\n    return <TrendingGallery movies={trendingMovies} />;\n  if (status === STATUS.REJECTED)\n    return <h1>There is error: {error.message}</h1>;\n};\n\nexport default HomePage;\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const Card = ({ movie }) => {\n  const location = useLocation()\n  return (\n    <div className=\"movie-gallery-item\" key={movie.id}>\n      <Link\n        className=\"movie-card-link\"\n        to={`/movieDetails/${movie.id}`}\n        state={{ from: location }}\n      >\n        <div className=\"poster-wrap\">\n          <img\n            className=\"poster\"\n            src={\n              movie.poster_path !== null\n                ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\n                : 'https://placehold.co/400x600?text=No%20image'\n            }\n            alt=\"\"\n          />\n          <div className=\"poster-descr\">\n            <h4 className=\"text-2xl\">Movie overview</h4>{' '}\n            <span className=\"block\"></span>\n            <p className=\"pt-2 line-clamp-6\">{movie.overview} </p>{' '}\n          </div>\n        </div>{' '}\n        <p className=\"movie-link-title\">\n          {movie.title}\n          {movie.release_date !== '' && \", \" + movie.release_date.substring(0, 4)}\n        </p>\n      </Link>\n    </div>\n  );\n};\n"],"names":["movies","location","useLocation","useLayoutEffect","gsap","yPercent","opacity","movieCard","scale","forEach","card","description","children","addEventListener","className","map","movie","Card","from","id","STATUS","useState","trendingMovies","setTrendingMovies","status","setStatus","error","setError","useEffect","getTrendingMovies","then","data","console","log","results","catch","message","Link","to","state","src","poster_path","alt","overview","title","release_date","substring"],"sourceRoot":""}