{"version":3,"file":"static/js/386.4351f825.chunk.js","mappings":"sNAcA,EAXwB,SAACA,GAChB,IAED,OADqBC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,4BAAsEE,EAAAA,GAK9F,CAFH,MAAOC,GACDC,QAAQC,IAAIF,EACf,CAEJ,E,+DCQD,EAlBmB,SAAC,GAAY,IAAVG,EAAS,EAATA,GACpB,OAAIA,EAAGC,cAEH,gBACEC,IAAG,yCAAoCF,EAAGC,cAC1CE,IAAKH,EAAGI,QAKV,SAAC,cAAD,CACMC,MAAO,CAAEC,MAAO,OAAQC,UAAW,oBAAqBC,KAAM,QADpE,UAGE,SAAC,MAAD,KAGP,ECED,EAhBmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,SAACC,EAAD,UACGD,EAAWE,KAAI,SAAAX,GAAE,OAChB,SAACY,EAAD,WACE,4BACQ,SAAC,EAAD,CAAYZ,GAAKA,KAEvB,uBAAIA,EAAGI,OAHT,KAGmB,uCAAeJ,EAAGa,iBAJlBb,EAAGc,QADR,KAWvB,EAIKJ,EAAiBK,EAAAA,GAAAA,GAAH,kFAMdH,EAAiBG,EAAAA,GAAAA,GAAH,+CCJpB,EAnBa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQxB,GAAOyB,EAAAA,EAAAA,MAAPzB,GAQN,OAPF0B,EAAAA,EAAAA,YAAU,WACRC,EAAgB3B,GAAI4B,MAAK,SAAAC,GACvBL,EAAQK,EAAQC,KAAKP,KACtB,GACF,GAAC,CAACvB,KAGM,iCACH,kCACA,sCAEF,SAAC,EAAD,CAAYe,WAAaQ,MAE9B,C,8FCpBYrB,EAAU,mCAEjB6B,EAAiB,mCAAG,6GAEQ9B,EAAAA,EAAAA,IAAA,kEAAqEC,IAF7E,cAEjB8B,EAFiB,yBAGbA,GAHa,gCAKtB5B,QAAQD,MAAR,MALsB,yDAAH,qDASvB,K","sources":["components/utils/getMovieCredits.js","components/pages/pageComponents/ActorPhoto.jsx","components/pages/pageComponents/ActorsList.jsx","components/pages/pageComponents/Cast.jsx","components/utils/getTrendingMovies.js"],"sourcesContent":["import axios from \"axios\"\nimport { API_KEY } from \"./getTrendingMovies\";\n\nconst getMovieCredits = (id) => {\n         try {\n        const movieCredits = axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n        return movieCredits;\n}\n  catch (error) {\n        console.log(error)\n    }\n\n}\n\nexport default getMovieCredits;","import { IconContext } from 'react-icons/lib';\nimport { MdNoPhotography } from 'react-icons/md';\nconst ActorPhoto = ({ el }) => {\n  if (el.profile_path) {\n    return (\n      <img\n        src={`https://image.tmdb.org/t/p/w200${el.profile_path}`}\n        alt={el.name}\n      />\n    );\n  } else\n    return (\n      <IconContext.Provider\n            value={{ color: 'grey', className: 'global-class-name', size: '10em' }}\n      >\n        <MdNoPhotography />\n      </IconContext.Provider>\n    );\n};\n\nexport default ActorPhoto;\n","import styled from \"styled-components\";\nimport ActorPhoto from \"./ActorPhoto\";\n\n\nconst ActorsList = ({ actorsList }) => {\n  return (\n    <ActorsCatsList>\n      {actorsList.map(el => (\n        <ActorsListItem key={el.cast_id}>\n          <div>\n                  <ActorPhoto el={ el} />\n           \n            <p>{el.name}</p> <p>Character: {el.character}</p>\n          </div>\n        </ActorsListItem>\n      ))}\n    </ActorsCatsList>\n  );\n};\n\nexport default ActorsList;\n\nconst ActorsCatsList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n`\n\nconst ActorsListItem = styled.li`\n    list-style: none;\n`","import getMovieCredits from \"components/utils/getMovieCredits\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ActorsList from \"./ActorsList\";\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { id } = useParams();\n  useEffect(() => {\n    getMovieCredits(id).then(credits => {\n      setCast(credits.data.cast)\n    })\n  },[id])\n   \n    \n    return <>\n        <h1>CAST</h1>\n        <h2>Actors: </h2>\n      {/* <p>{ cast}</p> */}\n      <ActorsList actorsList={ cast} />\n    </>\n}\n\nexport default Cast;","import axios from \"axios\"\n\nexport const API_KEY = '8ab5cec4865fda22e5306b37c1a59fd4';\n\nconst getTrendingMovies = async () => {\n  try {\n   const responseTrending = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n      return responseTrending;\n  } catch (error) {\n    console.error(error);\n    }\n}\n\nexport default getTrendingMovies;"],"names":["id","axios","API_KEY","error","console","log","el","profile_path","src","alt","name","value","color","className","size","actorsList","ActorsCatsList","map","ActorsListItem","character","cast_id","styled","useState","cast","setCast","useParams","useEffect","getMovieCredits","then","credits","data","getTrendingMovies","responseTrending"],"sourceRoot":""}