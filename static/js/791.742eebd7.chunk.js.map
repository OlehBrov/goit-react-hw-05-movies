{"version":3,"file":"static/js/791.742eebd7.chunk.js","mappings":"8PAGMA,EAAe,mCAAG,WAAOC,GAAP,uFAEVC,EAAeC,EAAAA,EAAAA,IAAA,6CAAgDF,EAAhD,oBAA8DG,EAAAA,IAFnE,kBAGTF,GAHS,gCAMhBG,QAAQC,IAAR,MANgB,wDAAH,sDAWrB,I,4CCmDA,EA5DqB,WAAO,IAAD,IACzB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAgDF,EAAAA,EAAAA,UAAS,IAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeC,EAAf,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAWrCtB,GAAOuB,EAAAA,EAAAA,MAAPvB,GASR,OARAD,EAAgBC,GAAIwB,MAAK,SAAAC,GACvBjB,EAAciB,EAAMC,KAAKC,OACzBjB,EAAoBe,EAAMC,KAAKE,aAAaC,MAAM,EAAG,IACrDjB,EAASa,EAAMC,KAAKI,cACpBhB,EAAU,kCAAoCW,EAAMC,KAAKK,aACzDf,EAAYS,EAAMC,KAAKX,UAdL,SAAAiB,GAClB,IAAMC,EAAYD,EAAIE,QAAO,SAACC,EAAOC,GAEnC,OADAD,EAAME,KAAKD,EAAME,MACVH,CACR,GAAE,IACHjB,EAAUe,EAAUM,KAAK,MAC1B,CASCC,CAAYf,EAAMC,KAAKT,OACxB,KAEC,UAACwB,EAAD,YACE,SAACC,EAAD,CAAgBC,GAAIxB,EAApB,mBACA,4BACE,gBAAKyB,IAAK/B,EAAQgC,IAAKtC,KACvB,UAACuC,EAAD,YACE,UAACC,EAAD,WACGxC,EADH,MACkBE,EADlB,QAGA,wCAAgBE,MAChB,sCACA,uBAAII,KACJ,oCACA,uBAAIE,WAGR,4BACE,oDACA,2BACE,yBACE,SAAC,EAAA+B,KAAD,CAAML,GAAI,OAAV,qBAEF,yBACE,SAAC,EAAAK,KAAD,CAAML,GAAI,UAAV,2BAGJ,SAAC,KAAD,SAIP,EAIKD,GAAiBO,EAAAA,EAAAA,IAAOD,EAAAA,KAAPC,CAAH,oRAgBdR,EAAoBQ,EAAAA,GAAAA,IAAH,2CAIjBH,EAAqBG,EAAAA,GAAAA,IAAH,2FAMlBF,EAAgBE,EAAAA,GAAAA,GAAH,+C,8FC3FN9C,EAAU,mCAEjB+C,EAAiB,mCAAG,6GAEQhD,EAAAA,EAAAA,IAAA,kEAAqEC,IAF7E,cAEjBgD,EAFiB,yBAGbA,GAHa,gCAKtB/C,QAAQgD,MAAR,MALsB,yDAAH,qDASvB,K","sources":["components/utils/getMovieDetails.js","components/pages/pageComponents/MovieDetails.jsx","components/utils/getTrendingMovies.js"],"sourcesContent":["import axios from \"axios\"\nimport { API_KEY } from \"./getTrendingMovies\"\n\nconst getMovieDetails = async (id) => {\n    try {\n        const movieDetails = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        return movieDetails;\n}\n  catch (error) {\n        console.log(error)\n    }\n\n} \n\nexport default getMovieDetails;","import getMovieDetails from 'components/utils/getMovieDetails';\nimport { useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = () => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieReleaseDate, setMovieReleaseDate] = useState('');\n  const [score, setScore] = useState('');\n  const [poster, setPoster] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n\n  const orderGenres = arr => {\n    const allGenres = arr.reduce((total, genre) => {\n      total.push(genre.name);\n      return total;\n    }, []);\n    setGenres(allGenres.join(', '));\n  };\n\n  const { id } = useParams();\n  getMovieDetails(id).then(movie => {\n    setMovieTitle(movie.data.title);\n    setMovieReleaseDate(movie.data.release_date.slice(0, 4));\n    setScore(movie.data.vote_average);\n    setPoster('https://image.tmdb.org/t/p/w500' + movie.data.poster_path);\n    setOverview(movie.data.overview);\n    orderGenres(movie.data.genres);\n  });\n  return (\n    <OverviewContainer>\n      <BackLinkStyled to={backLinkHref}>Back</BackLinkStyled>\n      <div>\n        <img src={poster} alt={movieTitle} />\n        <MovieDetailsStyled>\n          <HeadingStyled>\n            {movieTitle}, ({movieReleaseDate})\n          </HeadingStyled>\n          <p>User score: {score}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </MovieDetailsStyled>\n      </div>\n      <div>\n        <h4>Additional Information</h4>\n        <ul>\n          <li>\n            <Link to={'Cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'Reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </OverviewContainer>\n  );\n};\n\nexport default MovieDetails;\n\nconst BackLinkStyled = styled(Link)`\n  display: flex;\n  width: 80px;\n  height: 45px;\n  background: gray;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  text-decoration: none;\n  color: white;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    color: tomato;\n  }\n`;\n\nconst OverviewContainer = styled.div`\n  display: block;\n`;\n\nconst MovieDetailsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 25px;\n`\n\nconst HeadingStyled = styled.h1`\n  margin-bottom: auto;\n`","import axios from \"axios\"\n\nexport const API_KEY = '8ab5cec4865fda22e5306b37c1a59fd4';\n\nconst getTrendingMovies = async () => {\n  try {\n   const responseTrending = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n      return responseTrending;\n  } catch (error) {\n    console.error(error);\n    }\n}\n\nexport default getTrendingMovies;"],"names":["getMovieDetails","id","movieDetails","axios","API_KEY","console","log","useState","movieTitle","setMovieTitle","movieReleaseDate","setMovieReleaseDate","score","setScore","poster","setPoster","overview","setOverview","genres","setGenres","backLinkHref","useLocation","state","from","useParams","then","movie","data","title","release_date","slice","vote_average","poster_path","arr","allGenres","reduce","total","genre","push","name","join","orderGenres","OverviewContainer","BackLinkStyled","to","src","alt","MovieDetailsStyled","HeadingStyled","Link","styled","getTrendingMovies","responseTrending","error"],"sourceRoot":""}