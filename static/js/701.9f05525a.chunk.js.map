{"version":3,"file":"static/js/701.9f05525a.chunk.js","mappings":"kNAaA,EAVwB,SAACA,GACtB,IAEK,OADqBC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,4BAAsEE,EAAAA,GAK9F,CAFH,MAAOC,GACDC,QAAQC,IAAIF,EACf,CAEJ,E,2BCRKG,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAiDZ,EA9CgB,WACd,OAA4BC,EAAAA,EAAAA,UAASD,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOJ,EAAP,KAAcO,EAAd,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAqBR,OAnBAc,EAAAA,EAAAA,YAAU,WACRL,EAAUH,GACVS,EAAgBf,GACbgB,MAAK,SAAAC,GACoC,IAApCA,EAAYC,KAAKC,QAAQC,QAC3BR,EAAW,CACT,CACEZ,GAAI,MACJqB,OAAQ,QACRC,QAAS,iDAGbb,EAAUH,IACLM,EAAWK,EAAYC,KAAKC,SACnCV,EAAUH,EACX,IACAiB,OAAM,SAAApB,GAAK,OAAIO,EAASP,EAAb,GAAqBM,EAAUH,GAC9C,GAAE,CAACN,IAEAQ,IAAWF,GAAkBE,IAAWF,GACnC,4CAELE,IAAWF,GAEX,iCACE,qCACA,wBACGK,EAAQa,KAAI,SAAAC,GAAE,OACb,2BACE,uBAAIA,EAAGJ,UAEP,uBAAII,EAAGH,YAHAG,EAAGzB,GADC,SAUnBQ,IAAWF,GAAwB,0CAAkBH,EAAlB,oBAAvC,CACD,C,8FCrDYD,EAAU,mCAEjBwB,EAAiB,mCAAG,6GAEQzB,EAAAA,EAAAA,IAAA,kEAAqEC,IAF7E,cAEjByB,EAFiB,yBAGbA,GAHa,gCAKtBvB,QAAQD,MAAR,MALsB,yDAAH,qDASvB,K","sources":["components/utils/getMovieReviews.js","components/pages/pageComponents/Reviews.jsx","components/utils/getTrendingMovies.js"],"sourcesContent":["import axios from \"axios\"\nimport { API_KEY } from \"./getTrendingMovies\"\n\nconst getMovieReviews = (id) => {\n   try {\n        const movieReviews = axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`)\n        return movieReviews;\n}\n  catch (error) {\n        console.log(error)\n    } \n\n}\nexport default getMovieReviews;","import getMovieReviews from 'components/utils/getMovieReviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Reviews = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [reviews, setReviews] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    getMovieReviews(id)\n      .then(reviewsData => {\n        if (reviewsData.data.results.length === 0) {\n          setReviews([\n            {\n              id: '000',\n              author: 'Oops!',\n              content: 'This movie has no reviews. Maybe its boring',\n            },\n          ]);\n          setStatus(STATUS.RESOLVED);\n        } else setReviews(reviewsData.data.results);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => setError(error), setStatus(STATUS.REJECTED));\n  }, [id]);\n\n  if (status === STATUS.PENDING || status === STATUS.IDLE)\n    return <h1>Loading reviews</h1>;\n\n  if (status === STATUS.RESOLVED)\n    return (\n      <>\n        <h1>REVIEWS</h1>\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <p>{el.author}</p>\n\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  if (status === STATUS.REJECTED) return <h1>Some error - {error} happened</h1>;\n};\n\nexport default Reviews;\n","import axios from \"axios\"\n\nexport const API_KEY = '8ab5cec4865fda22e5306b37c1a59fd4';\n\nconst getTrendingMovies = async () => {\n  try {\n   const responseTrending = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n      return responseTrending;\n  } catch (error) {\n    console.error(error);\n    }\n}\n\nexport default getTrendingMovies;"],"names":["id","axios","API_KEY","error","console","log","STATUS","useState","status","setStatus","setError","reviews","setReviews","useParams","useEffect","getMovieReviews","then","reviewsData","data","results","length","author","content","catch","map","el","getTrendingMovies","responseTrending"],"sourceRoot":""}