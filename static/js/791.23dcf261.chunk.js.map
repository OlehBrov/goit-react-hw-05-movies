{"version":3,"file":"static/js/791.23dcf261.chunk.js","mappings":"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","sources":["components/utils/getMovieDetails.js","components/pages/pageComponents/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\"\nimport { API_KEY } from \"./getTrendingMovies\"\n\nconst getMovieDetails = async (id) => {\n    try {\n        const movieDetails = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        return movieDetails;\n}\n  catch (error) {\n        console.log(error)\n    }\n\n} \n\nexport default getMovieDetails;","import getMovieDetails from 'components/utils/getMovieDetails';\nimport gsap from 'gsap';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\n\nconst MovieDetails = () => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieReleaseDate, setMovieReleaseDate] = useState('');\n  const [score, setScore] = useState('');\n  const [poster, setPoster] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [details, setDetails] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const [castLoad, setCastLoad] = useState(false);\n  const [castIsOpen, setCastIsOpen] = useState(false);\n  const [reviewsLoad, setReviewsLoad] = useState(false);\n  const [reviewsIsOpen, setReviewsIsOpen] = useState(false);\n\n  const navigate = useNavigate();\n  const moviePage = useRef(location);\n  const orderGenres = arr => {\n    const allGenres = arr.reduce((total, genre) => {\n      total.push(genre.name);\n      return total;\n    }, []);\n    setGenres(allGenres.join(', '));\n  };\n\n  const { id } = useParams();\n  getMovieDetails(id).then(movie => {\n    setMovieTitle(movie.data.title);\n    setMovieReleaseDate(movie.data.release_date.slice(0, 4));\n    setScore(movie.data.vote_average);\n    setPoster('https://image.tmdb.org/t/p/w500' + movie.data.poster_path);\n    setOverview(movie.data.overview);\n    orderGenres(movie.data.genres);\n    setDetails(true);\n  });\n  useEffect(() => {\n    const movieDetailsTl = gsap.timeline();\n    if (!details) return;\n    movieDetailsTl\n      .from('.details-poster', {\n        xPercent: -100,\n        opacity: 0,\n        duration: 0.5,\n        ease: 'power.out',\n      })\n      .from(\n        '.details-movie-info',\n        {\n          xPercent: 100,\n          opacity: 0,\n          duration: 1,\n          ease: 'power.out',\n        },\n        '<'\n      );\n  }, [details]);\n\n  const castHandler = () => {\n    if (!castLoad) {\n      navigate('Cast');\n      setCastLoad(true);\n      setCastIsOpen(true);\n      setReviewsIsOpen(false);\n      return;\n    }\n    if (reviewsIsOpen) {\n      gsap.to('.review-list-wrap', {\n        yPercent: 100,\n        opacity: 0,\n        onComplete: () => {\n          setReviewsIsOpen(false);\n          gsap.set('.review-list-wrap', { display: 'none' });\n          navigate(moviePage);\n          navigate('Cast');\n          setCastLoad(true);\n          setCastIsOpen(true);\n          return;\n        },\n      });\n    }\n    if (castIsOpen) {\n      gsap.to('.casting-list-wrap', {\n        yPercent: 100,\n        opacity: 0,\n        onComplete: () => {\n          setCastIsOpen(false);\n          setReviewsIsOpen(false);\n          gsap.set('.casting-list-wrap', { display: 'none' });\n          navigate(moviePage.current);\n        },\n      });\n      return;\n    }\n    if (!castIsOpen) {\n      navigate('Cast');\n      setCastLoad(true);\n      setReviewsIsOpen(false);\n      gsap.set('.casting-list-wrap', { display: 'flex' });\n      gsap.to('.casting-list-wrap', {\n        yPercent: 0,\n        opacity: 1,\n        onComplete: () => setCastIsOpen(true),\n      });\n      return;\n    }\n  };\n  const reviewsHandler = () => {\n   \n    if (!reviewsLoad) {\n      navigate('Reviews');\n      setReviewsLoad(true);\n      setReviewsIsOpen(true);\n      setCastIsOpen(false);\n      return;\n    }\n    if (castIsOpen) {\n      gsap.to('.casting-list-wrap', {\n        yPercent: 100,\n        opacity: 0,\n        onComplete: () => {\n          setCastIsOpen(false);\n          gsap.set('.casting-list-wrap', { display: 'none' });\n          navigate(moviePage);\n          navigate('Reviews')\n          setReviewsLoad(true)\n          setReviewsIsOpen(true)\n        },\n      });\n      // navigate('Cast');\n    }\n    if (reviewsIsOpen) {\n      gsap.to('.review-list-wrap', {\n        yPercent: 100,\n        opacity: 0,\n        onComplete: () => {\n          setReviewsIsOpen(false);\n          setCastIsOpen(false);\n          gsap.set('.review-list-wrap', { display: 'none' });\n          navigate(moviePage.current);\n        },\n      });\n      return;\n    }\n    if (!reviewsIsOpen) {\n      navigate('Reviews')\n      setReviewsLoad(true)\n      setCastIsOpen(false)\n      gsap.set('.review-list-wrap', { display: 'flex' });\n      gsap.to('.review-list-wrap', {\n        yPercent: 0,\n        opacity: 1,\n        onComplete: () => setReviewsIsOpen(true),\n      });\n      return;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Link className=\"back-btn\" to={backLinkHref.current}>\n        Back\n      </Link>\n      <div className=\"details-wrap\">\n        <img className=\"details-poster\" src={poster} alt={movieTitle} />\n        <div className=\"details-movie-info\">\n          <h1 className=\"details-movie-name\">\n            {movieTitle}, ({movieReleaseDate})\n          </h1>\n          <p className=\"details-movie-score\">User score: {score}</p>\n          <h2 className=\"details-movie-header\">Overview</h2>\n          <p className=\"details-movie-overview\">{overview}</p>\n          <h2 className=\"details-movie-header\">Genres</h2>\n          <p className=\"details-movie-genre\">{genres}</p>\n        </div>\n      </div>\n      <div>\n        <h2 className=\"details-movie-header\">Additional Information</h2>\n        <ul className='additional-info-list'>\n          <li>\n            {/* <button onClick={() => navigate('Cast')}>CAST</button> */}\n            <button className='additional-info-btn' onClick={castHandler}>CAST</button>\n\n            {/* <Link to={'Cast'}>Cast</Link> */}\n          </li>\n          <li>\n            <button className='additional-info-btn' onClick={reviewsHandler}>Reviews</button>\n            {/* <Link to={'Reviews'}>Reviews</Link> */}\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n"],"names":["getMovieDetails","id","movieDetails","axios","API_KEY","console","log","useState","movieTitle","setMovieTitle","movieReleaseDate","setMovieReleaseDate","score","setScore","poster","setPoster","overview","setOverview","genres","setGenres","details","setDetails","location","useLocation","backLinkHref","useRef","state","from","castLoad","setCastLoad","castIsOpen","setCastIsOpen","reviewsLoad","setReviewsLoad","reviewsIsOpen","setReviewsIsOpen","navigate","useNavigate","moviePage","useParams","then","movie","data","title","release_date","slice","vote_average","poster_path","arr","allGenres","reduce","total","genre","push","name","join","orderGenres","useEffect","movieDetailsTl","gsap","xPercent","opacity","duration","ease","className","Link","to","current","src","alt","onClick","yPercent","onComplete","display"],"sourceRoot":""}